"Vundle
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}

" for golang
Plugin 'fatih/vim-go'
" Plugin 'scrooloose/syntastic'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"=========================================================================
" DesCRiption: 适合自己使用的vimrc文件，for Linux/Windows, GUI/Console
"=========================================================================
set nocompatible				" 关闭 vi 兼容模式
syntax on						" 自动语法高亮
filetype on						" try to detect filetypes
filetype plugin indent on		" enable loading indent file for filet
set number						" 显示行号
set list						" 显示tab 空格
set tabstop=4
set shiftwidth=4				" 设定<< >> 命令移动时宽度为4个空格
set softtabstop=4				" 使得tab键 4 个空格
filetype plugin indent on		" 开启插件
set ignorecase smartcase		" 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感
set incsearch					" 输入搜索内容时就显示搜索结果
set hlsearch					" 搜索时高亮显示被找到的文本
set magic						" 设置魔术
set smartindent					"smartindent cindent " 开启新行时使用智能自动缩进
set backspace=indent,eol,start	" 不设定在插入状态无法用退格键和 Delete 键删除回车符
set cmdheight=1					" 设定命令行的行数为 1
set laststatus=2				" 显示状态栏 (默认值为 1, 无法显示状态栏)
set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&fileformat}\ %{&encoding}\ %c:%l/%L%)\
								" 设置在状态行显示的信息
set foldenable					" 开始折叠
set foldmethod=indent			" 设置默认折叠, :help fold-methods  :help fold-commonds
set noerrorbells				" 关闭错误信息响铃
set novisualbell				" 关闭使用可视响铃代替呼叫
set whichwrap=b,s,<,>,[,]		"左右光标移动到头时可以自动下移
set hidden						"没有保存的缓冲区可以自动隐藏
set scrolloff=7					"设置光标上下保留的最小的行数
set autoindent					"自动对齐
set ai!							"设置自动缩进
set wildmenu "增强模式的命令行
set listchars=tab:>-,trail:-	"优化显示tab空格， set list 生效
" 设置鼠标
if has('mouse')
	  set mouse=v
endif

"括号匹配
"vnoremap $1 <esc>`>a)<esc>`<i(<esc>
"vnoremap $2 <esc>`>a]<esc>`<i[<esc>
"vnoremap $3 <esc>`>a}<esc>`<i{<esc>
"vnoremap $$ <esc>`>a"<esc>`<i"<esc>
"vnoremap $q <esc>`>a'<esc>`<i'<esc>
"vnoremap $e <esc>`>a"<esc>`<i"<esc>
"非常好用的括号匹配，实际是自动生成括号
""实现便利和兼容的折中
"inoremap $1 ()<esc>i
"inoremap $2 []<esc>i
"inoremap $3 {}<esc>i
"inoremap $4 {<esc>o}<esc>O
"inoremap $q ''<esc>i
"inoremap $e ""<esc>i
"inoremap $t <><esc>i

"使用ALT+[jk]来移动行内容
" nmap <M-j> mz:m+<cr>`z
" nmap <M-k> mz:m-2<cr>`z
" vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z
" vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z

"窗口分割时,进行切换的按键热键需要连接两次,比如从下方窗口移动
""光标到上方窗口,需要<c-w><c-w>k,非常麻烦,现在重映射为<c-k>,切换的
"时候会变得非常方便.
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"实现CTRL-S保存操作
nmap <c-s> :w<CR>
imap <c-s> <Esc>:w<CR>a

"实现了CTRL-C、CTRL-V复制粘贴操作的映射
" vnoremap <c-c> "+y
" inoremap <c-v> <esc>"+p<CR>i

" winManager插件
"let g:winManagerWindowLayout='FileExplorer|TagList'  
"let g:winManagerWidth = 30
"let g:defaultExplorer = 1
"let g:indentLine_color_term = 239
"let g:indentLine_char = '¦'
"nmap <C-W><C-F> :FirstExplorerWindow<cr> 
"nmap <C-W><C-B> :BottomExplorerWindow<cr>
"nmap wm :WMToggle<CR>
map <buffer><F3> :!php -l %<CR>
"vmap<C-Z>:s/^/#/<CR>vmapZZ:s/^##*// <CR>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""新文件标题
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新建.c,.h,.sh,.java文件，自动插入文件头 
autocmd BufNewFile *.sh,*.php,*.py,*.go exec ":call SetTitle()" 
""定义函数SetTitle，自动插入文件头 
func SetTitle() 
	"如果文件类型为.sh文件 
	if &filetype == 'sh' 
		call setline(1, "\#!/bin/bash") 
		call append(1, "\#########################################################################") 
		call append(2, "\# Author: (".$USER."@domob.cn)") 
		call append(3, "\# Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
		call append(4, "\# File Name: ".expand("%")) 
		call append(5, "\# Description: ")
		call append(6, "\#########################################################################") 
		call append(7, "") 
		call append(8, "\# vim: set noexpandtab ts=4 sts=4 sw=4 :")
	elseif &filetype == 'php'
		call setline(1, "<?php") 
		call append(1, "\#########################################################################") 
		call append(2, "\# Author: (".$USER."@domob.cn)") 
		call append(3, "\# Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
		call append(4, "\# File Name: ".expand("%")) 
		call append(5, "\# Description: ")
		call append(6, "\#########################################################################") 
		call append(7, "") 
		call append(8, "class ".substitute(expand("%"), '.php', '', 1)." extends ") 
		call append(9, "") 
		call append(10, "\# vim: set noexpandtab ts=4 sts=4 sw=4 :")
	elseif &filetype == 'python'
		call setline(1, "\#!/usr/bin/env python")
		call append(1, "\#-*- coding: utf-8 -*-")
		call append(2, "\#########################################################################")
		call append(2, "\# Author: (".$USER."@domob.cn)") 
		call append(4, "\# Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
		call append(5, "\# File Name: ".expand("%")) 
		call append(6, "\# Description: ")
		call append(7, "\#########################################################################")
		call append(8, "")
		call append(9, "\# vim: set noexpandtab ts=4 sts=4 sw=4 :")
	elseif &filetype == 'go'
		call setline(1, "\//######################################################################")
		call append(1, "\// Author: (".$USER."@domob.cn)") 
		call append(2, "\// Created Time: ".strftime("%Y-%m-%d %H:%M:%S"))
		call append(3, "\// File Name: ".expand("%")) 
		call append(4, "\// Description: ")
		call append(5, "\//#######################################################################")
		call append(6, "")
		call append(7, "\// vim: set noexpandtab ts=4 sts=4 sw=4 :")
	endif
	"endif
	"	if &filetype == 'java'
	"		call append(line(".")+6,"public class ".expand("%"))
	"		call append(line(".")+7,"")
	"	endif
	"新建文件后，自动定位到文件末尾
	autocmd BufNewFile * normal G
endfunc 
